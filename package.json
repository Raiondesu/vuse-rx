{
  "name": "vuse-rx",
  "version": "0.13.1",
  "sideEffects": false,
  "description": "First-class rxjs support for Vue 3",
  "main": "dist/js",
  "module": "dist/es",
  "unpkg": "dist/umd",
  "typings": "src",
  "files": [
    "dist",
    "src",
    "LICENSE",
    "tsconfig.json",
    "README.md"
  ],
  "scripts": {
    "test": "jest -i --passWithNoTests",
    "build:js": "tsc --outDir dist/js -t ES2015",
    "build:es": "tsc --outDir dist/es -t ES2015 --module ES2015",
    "build:next": "tsc --outDir dist/esnext --module esnext",
    "build:umd": "bili",
    "build": "npm run checks && npm run build:js && npm run build:es && npm run build:next && npm run build:umd",
    "build:vite": "vite build",
    "dev": "tsc --noEmit -w",
    "checks": "madge --circular --extensions ts src/index.ts",
    "commit-build": "(git diff --quiet && git diff --staged --quiet) || (git commit -am \"Update dist\")",
    "preversion": "npm t && npm run build && npm run commit-build",
    "prerelease": "npm version prerelease --preid=rc",
    "pre-patch": "npm version prerelease --preid=rc",
    "pre-minor": "npm version preminor --preid=rc",
    "pre-major": "npm version premajor --preid=rc",
    "patch": "npm version patch",
    "minor": "npm version minor",
    "major": "npm version major",
    "docs:dev": "vitepress dev docs",
    "docs:build": "vitepress build docs",
    "docs:serve": "vitepress serve docs"
  },
  "keywords": [
    "vue",
    "vue-next",
    "rxjs",
    "vue3",
    "rx",
    "simple",
    "pure",
    "integration",
    "support",
    "composition-api",
    "composition",
    "first-class",
    "hooks",
    "store",
    "state-manager",
    "event-manager",
    "typescript",
    "type vuex",
    "vuex alternative"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Raiondesu/vuse-rx.git"
  },
  "author": "Raiondesu",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Raiondesu/vuse-rx/issues"
  },
  "homepage": "https://vuse-rx.raiondesu.dev",
  "devDependencies": {
    "@types/jest": "^29.2.5",
    "@types/node": "^18.11.18",
    "bili": "^5.0.5",
    "eslint": "^8.32.0",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^6.1.1",
    "eslint-plugin-standard": "^5.0.0",
    "flexsearch": "^0.7.31",
    "jest": "^29.3.1",
    "madge": "^5.0.1",
    "rollup-plugin-typescript2": "^0.29.0",
    "rxjs": "^7.8.0",
    "sitemap-ts": "^1.2.2",
    "ts-jest": "^29.0.5",
    "typescript": "^4.9.4",
    "vite": "^4.0.4",
    "vitepress": "^1.0.0-alpha.38",
    "vitepress-plugin-search": "^1.0.4-alpha.17",
    "vue": "^3.2.45",
    "vuse-rx": "./"
  },
  "peerDependencies": {
    "rxjs": "^7.1.0",
    "vue": "^3.0.5"
  },
  "jest": {
    "preset": "ts-jest",
    "verbose": true,
    "coverageReporters": [
      "lcov",
      "text"
    ],
    "coveragePathIgnorePatterns": [
      "/node_modules/",
      "/tests?/",
      "/dist/"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 100,
        "functions": 100,
        "lines": 100,
        "statements": 100
      }
    },
    "collectCoverage": true
  },
  "eslintConfig": {
    "root": true,
    "env": {
      "browser": true,
      "es6": true,
      "node": true
    },
    "extends": [
      "eslint:recommended"
    ],
    "plugins": [
      "@typescript-eslint",
      "@typescript-eslint/tslint"
    ],
    "parserOptions": {
      "project": "tsconfig.json",
      "sourceType": "module",
      "ecmaVersion": 2020
    },
    "rules": {
      "no-console": "warn",
      "no-debugger": "warn",
      "@typescript-eslint/no-unused-vars": "warn",
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/no-empty-function": "off",
      "@typescript-eslint/adjacent-overload-signatures": "error",
      "@typescript-eslint/dot-notation": "error",
      "@typescript-eslint/explicit-member-accessibility": [
        "error",
        {
          "accessibility": "explicit"
        }
      ],
      "indent": [
        "error",
        2,
        {
          "SwitchCase": 1
        }
      ],
      "@typescript-eslint/member-delimiter-style": [
        "error",
        {
          "multiline": {
            "delimiter": "semi",
            "requireLast": true
          },
          "singleline": {
            "delimiter": "semi",
            "requireLast": false
          }
        }
      ],
      "no-param-reassign": "error",
      "@typescript-eslint/no-unnecessary-type-arguments": "warn",
      "@typescript-eslint/no-var-requires": "error",
      "quotes": [
        "error",
        "single"
      ],
      "@typescript-eslint/explicit-module-boundary-types": "off",
      "@typescript-eslint/semi": [
        "error",
        "always"
      ],
      "@typescript-eslint/unbound-method": "off",
      "arrow-body-style": "warn",
      "comma-dangle": [
        "error",
        {
          "objects": "always-multiline",
          "arrays": "always-multiline",
          "imports": "only-multiline",
          "exports": "only-multiline",
          "functions": "only-multiline"
        }
      ],
      "constructor-super": "error",
      "default-case": "error",
      "no-cond-assign": "error",
      "no-eval": "error",
      "no-magic-numbers": [
        "error",
        {
          "ignore": [
            -1,
            0,
            1,
            2,
            42
          ]
        }
      ],
      "no-duplicate-imports": "error",
      "no-new-wrappers": "error",
      "no-return-await": "error",
      "no-template-curly-in-string": "warn",
      "no-throw-literal": "error",
      "no-unsafe-finally": "error",
      "padding-line-between-statements": [
        "error",
        {
          "blankLine": "always",
          "prev": "*",
          "next": "return"
        }
      ],
      "prefer-object-spread": "error",
      "prefer-template": "error",
      "space-before-function-paren": [
        "error",
        {
          "anonymous": "always",
          "named": "never",
          "asyncArrow": "always"
        }
      ],
      "use-isnan": "error",
      "@typescript-eslint/tslint/config": [
        "error",
        {
          "rules": {
            "no-unnecessary-callback-wrapper": false,
            "number-literal-format": true,
            "return-undefined": true
          }
        }
      ]
    },
    "ignorePatterns": [
      "*.config.js"
    ],
    "overrides": [
      {
        "files": [
          "**/__tests__/*.{j,t}s?(x)",
          "**/tests/unit/**/*.spec.{j,t}s?(x)"
        ],
        "env": {
          "jest": true
        }
      },
      {
        "files": [
          "**/__tests__/*.{j,t}s?(x)",
          "**/tests/unit/**/*.spec.{j,t}s?(x)"
        ],
        "env": {
          "jest": true
        }
      }
    ]
  }
}
